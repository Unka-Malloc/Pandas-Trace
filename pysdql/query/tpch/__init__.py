import pprint
import time
import traceback

import pysdql.query.tpch.Qsdql

import pysdql.query.tpch.Qpandas

from pysdql.query.util import sdql_to_df, pandas_to_df, compare_dataframe

sep_line = '#' * 60


def tpch_query(qindex=1, execution_mode=0, threads_count=1, verbose=True) -> bool:
    done = [1, 3, 4, 5, 6, 10, 14, 15, 16, 18, 19]

    if isinstance(qindex, int):
        if qindex not in done:
            print(f'Query {qindex} has not been verified.')
            return False

        qindex = [qindex]

    if isinstance(qindex, list):
        check_dict = {}
        for q in qindex:
            if q not in done:
                print(f'Query {q} has not been verified.')
                return False

            print(f'>> Query {q} <<')

            sdql_df = None
            pandas_df = None

            if verbose:
                print(f'>> SDQL <<')

            try:
                print('SDQL Running...')

                sdql_result = eval(f'pysdql.query.tpch.Qsdql.q{q}({execution_mode}, {threads_count})')
            except:
                check_dict[q] = 'Error'

                if verbose:
                    print_error_text(q)
                else:
                    print(f'Query {q}: Error')

                print(traceback.print_exc())

                continue

            sdql_df = sdql_to_df(sdql_result)

            if verbose:
                print(sdql_result)

                print(f'>> Pandas <<')

            try:
                print('Pandas Running...')

                pandas_result = eval(f'pysdql.query.tpch.Qpandas.q{q}()')
            except:
                check_dict[q] = 'Error'

                if verbose:
                    print_error_text(q)
                else:
                    print(f'Query {q}: Error')

                print(traceback.print_exc())

                continue

            pandas_df = pandas_to_df(pandas_result)

            if verbose:
                print(pandas_result)

            if compare_dataframe(sdql_df, pandas_df, verbose):
                check_dict[q] = 'Pass'
                if verbose:
                    print_pass_text(q)
                else:
                    print(f'Query {q}: Pass')
            else:
                check_dict[q] = 'Fail'
                if verbose:
                    print_fail_text(q)
                else:
                    print(f'Query {q}: Fail')
        else:
            pprint.pprint(check_dict)
            print(sep_line)

            for k in check_dict.keys():
                if check_dict[k] != 'Pass':
                    return False
            else:
                return True
    else:
        raise NotImplementedError

def print_pass_text(q):
    print(sep_line)
    print(f'''
    {art_map[q]}
           ██████╗  █████╗ ███████╗███████╗
           ██╔══██╗██╔══██╗██╔════╝██╔════╝
           ██████╔╝███████║███████╗███████╗
           ██╔═══╝ ██╔══██║╚════██║╚════██║
           ██║     ██║  ██║███████║███████║
           ╚═╝     ╚═╝  ╚═╝╚══════╝╚══════╝                                                                  
    ''')
    print(sep_line)


def print_fail_text(q):
    print(sep_line)
    print(f'''
    {art_map[q]}
             █████▒ ▄▄▄       ██▓ ██▓    
           ▓██   ▒ ▒████▄    ▓██▒▓██▒    
           ▒████ ░ ▒██  ▀█▄  ▒██▒▒██░    
           ░▓█▒  ░ ░██▄▄▄▄██ ░██░▒██░    
           ░▒█░     ▓█   ▓██▒░██░░██████▒
            ▒ ░     ▒▒   ▓▒█░░▓  ░ ▒░▓  ░
            ░        ▒   ▒▒ ░ ▒ ░░ ░ ▒  ░
            ░ ░      ░   ▒    ▒ ░  ░ ░   
                         ░  ░ ░      ░  ░
    ''')
    print(sep_line)

def print_error_text(q):
    print(sep_line)
    print(f'''
    {art_map[q]}
         ▓█████  ██▀███   ██▀███   ▒█████   ██▀███  
         ▓█   ▀ ▓██ ▒ ██▒▓██ ▒ ██▒▒██▒  ██▒▓██ ▒ ██▒
         ▒███   ▓██ ░▄█ ▒▓██ ░▄█ ▒▒██░  ██▒▓██ ░▄█ ▒
         ▒▓█  ▄ ▒██▀▀█▄  ▒██▀▀█▄  ▒██   ██░▒██▀▀█▄  
         ░▒████▒░██▓ ▒██▒░██▓ ▒██▒░ ████▓▒░░██▓ ▒██▒
         ░░ ▒░ ░░ ▒▓ ░▒▓░░ ▒▓ ░▒▓░░ ▒░▒░▒░ ░ ▒▓ ░▒▓░
          ░ ░  ░  ░▒ ░ ▒░  ░▒ ░ ▒░  ░ ▒ ▒░   ░▒ ░ ▒░
            ░     ░░   ░   ░░   ░ ░ ░ ░ ▒    ░░   ░ 
            ░  ░   ░        ░         ░ ░     ░                 
    ''')
    print(sep_line)


art_map = {
    1: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗     ██╗
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ███║
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝     ╚██║
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝       ██║
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║        ██║
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝        ╚═╝
    ''',
    2: '''
    
    ''',
    3: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗    ██████╗ 
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ╚════██╗
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝      █████╔╝
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝       ╚═══██╗
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║       ██████╔╝
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝       ╚═════╝ 
    ''',
    4: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗    ██╗  ██╗
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ██║  ██║
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝     ███████║
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝      ╚════██║
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║            ██║
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝            ╚═╝

    ''',
    5: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗    ███████╗
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ██╔════╝
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝     ███████╗
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝      ╚════██║
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║       ███████║
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝       ╚══════╝
    ''',
    6: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗     ██████╗ 
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ██╔════╝ 
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝     ███████╗ 
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝      ██╔═══██╗
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║       ╚██████╔╝
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝        ╚═════╝ 
    ''',
    7: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗    ███████╗
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ╚════██║
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝        ██╔╝ 
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝        ██╔╝  
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║         ██║   
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝         ╚═╝   
''',
    8: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗     █████╗ 
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ██╔══██╗
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝     ╚█████╔╝
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝      ██╔══██╗
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║       ╚█████╔╝
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝        ╚════╝ 
''',
    9: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗     █████╗ 
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ██╔══██╗
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝     ╚██████║
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝       ╚═══██║
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║        █████╔╝
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝        ╚════╝ 
''',
    10: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗     ██╗ ██████╗ 
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ███║██╔═████╗
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝     ╚██║██║██╔██║
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝       ██║████╔╝██║
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║        ██║╚██████╔╝
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝        ╚═╝ ╚═════╝ 
''',
    11: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗     ██╗ ██╗
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ███║███║
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝     ╚██║╚██║
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝       ██║ ██║
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║        ██║ ██║
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝        ╚═╝ ╚═╝
''',
    12: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗     ██╗██████╗ 
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ███║╚════██╗
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝     ╚██║ █████╔╝
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝       ██║██╔═══╝ 
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║        ██║███████╗
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝        ╚═╝╚══════╝
''',
    13: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗     ██╗██████╗ 
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ███║╚════██╗
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝     ╚██║ █████╔╝
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝       ██║ ╚═══██╗
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║        ██║██████╔╝
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝        ╚═╝╚═════╝ 
''',
    14: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗     ██╗██╗  ██╗
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ███║██║  ██║
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝     ╚██║███████║
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝       ██║╚════██║
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║        ██║     ██║
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝        ╚═╝     ╚═╝
''',
    15: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗     ██╗███████╗
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ███║██╔════╝
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝     ╚██║███████╗
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝       ██║╚════██║
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║        ██║███████║
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝        ╚═╝╚══════╝
''',
    16: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗     ██╗ ██████╗ 
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ███║██╔════╝ 
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝     ╚██║███████╗ 
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝       ██║██╔═══██╗
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║        ██║╚██████╔╝
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝        ╚═╝ ╚═════╝ 
''',
    17: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗     ██╗███████╗
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ███║╚════██║
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝     ╚██║   ██╔╝ 
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝       ██║  ██╔╝  
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║        ██║  ██║   
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝        ╚═╝  ╚═╝   
''',
    18: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗     ██╗ █████╗ 
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ███║██╔══██╗
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝     ╚██║╚█████╔╝
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝       ██║██╔══██╗
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║        ██║╚█████╔╝
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝        ╚═╝ ╚════╝ 
''',
    19: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗     ██╗ █████╗ 
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ███║██╔══██╗
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝     ╚██║╚██████║
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝       ██║ ╚═══██║
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║        ██║ █████╔╝
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝        ╚═╝ ╚════╝ 
''',
    20: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗    ██████╗  ██████╗ 
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ╚════██╗██╔═████╗
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝      █████╔╝██║██╔██║
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝      ██╔═══╝ ████╔╝██║
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║       ███████╗╚██████╔╝
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝       ╚══════╝ ╚═════╝ 
''',
    21: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗    ██████╗  ██╗
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ╚════██╗███║
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝      █████╔╝╚██║
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝      ██╔═══╝  ██║
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║       ███████╗ ██║
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝       ╚══════╝ ╚═╝
''',
    22: '''
 ██████╗ ██╗   ██╗███████╗██████╗ ██╗   ██╗    ██████╗ ██████╗ 
██╔═══██╗██║   ██║██╔════╝██╔══██╗╚██╗ ██╔╝    ╚════██╗╚════██╗
██║   ██║██║   ██║█████╗  ██████╔╝ ╚████╔╝      █████╔╝ █████╔╝
██║▄▄ ██║██║   ██║██╔══╝  ██╔══██╗  ╚██╔╝      ██╔═══╝ ██╔═══╝ 
╚██████╔╝╚██████╔╝███████╗██║  ██║   ██║       ███████╗███████╗
 ╚══▀▀═╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝   ╚═╝       ╚══════╝╚══════╝
''',
}
